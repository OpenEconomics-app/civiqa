name: web-ci

on:
  pull_request:
    branches: [develop, integration, master]
    paths:
      - "apps/web/**"
      - "packages/**"
      - ".github/workflows/web-ci.yml"
  push:
    branches: [develop, integration, master]
    paths:
      - "apps/web/**"
      - "packages/**"
      - ".github/workflows/web-ci.yml"

concurrency:
  group: web-ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write    # required for CodeQL job to upload results
  pull-requests: read

env:
  NEXT_TELEMETRY_DISABLED: "1"
  CI: "true"

jobs:
  codeql:
    name: CodeQL (JavaScript/TypeScript)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: javascript-typescript
      - uses: github/codeql-action/analyze@v3

  web:
    name: Install • Lint • Typecheck • Test • Build
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: codeql               # ← wait for CodeQL to finish first

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 2 }

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      # Bulletproof pnpm setup (fixes your error)
      - name: Enable corepack (safety)
        run: corepack enable

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Verify pnpm
        run: pnpm -v

      - name: Install deps (workspace)
        run: pnpm install --frozen-lockfile

      # Quality gates
      - name: ESLint
        working-directory: apps/web
        run: pnpm lint

      - name: Type check
        working-directory: apps/web
        run: pnpm type-check

      # Tests (skip gracefully if not configured yet)
      - name: Unit tests (Vitest)
        working-directory: apps/web
        run: |
          if pnpm -s -w ls vitest >/dev/null 2>&1; then
            pnpm test -- --coverage
          else
            echo "Vitest not configured; skipping."
          fi

      - name: Build (Next.js)
        working-directory: apps/web
        run: pnpm build

      # Helpful artifacts
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: web-coverage-${{ github.run_id }}
          path: apps/web/coverage
          if-no-files-found: ignore
          retention-days: 7